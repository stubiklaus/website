var searchIndex = {};
searchIndex["amethyst"] = {"doc":"Amethyst is a free and open source game engine written in idiomatic\n[Rust][rs] for building video games and interactive multimedia applications.\nThe source code is available for download on [GitHub][gh]. See the\n[online book][bk] for a complete guide to using Amethyst.","items":[],"paths":[]};
searchIndex["amethyst_renderer"] = {"doc":"High-level rendering engine with multiple backends.","items":[[3,"Frame","amethyst_renderer","Holds frame-specific data that is consumed by the frontend.",null,null],[3,"FrameBuilder","","Consuming builder for easily constructing a new frame.",null,null],[3,"Renderer","","A simple renderer frontend. Accepts a `Pipeline` on startup, and parses\n`Frame`s.",null,null],[3,"Pipeline","","A set of stages that describes how to draw a frame.",null,null],[12,"name","","",0,null],[12,"stages","","",0,null],[3,"PipelineBuilder","","",null,null],[3,"Stage","","A set of steps that accomplishes some task in the rendering pipeline.",null,null],[12,"name","","",1,null],[12,"steps","","",1,null],[4,"Step","","A single, atomic rendering operation.",null,null],[13,"ClearTarget","","Clears the current render target.",2,null],[12,"buffers","amethyst_renderer::Step","Which buffers to clear. Possible values: &quot;all&quot;, &quot;color&quot;, &quot;stencil&quot;.",2,null],[12,"value","","The RGBA value to clear the buffers with. If `None`, this will\ndefault to `[0.0; 4]`.",2,null],[13,"DrawObjects","amethyst_renderer","Draws all objects in the scene.",2,null],[13,"UseTarget","","Selects a render target to write to. If the given string is empty\n(`&quot;&quot;`), we render directly to the window surface.",2,null],[11,"new","","Creates an empty frame.",3,{"inputs":[],"output":{"name":"frame"}}],[11,"build","","Creates an initialized frame using the [builder pattern][bp].",3,{"inputs":[],"output":{"name":"framebuilder"}}],[11,"new","","Starts building a new frame.",4,{"inputs":[],"output":{"name":"framebuilder"}}],[11,"done","","Returns the newly-built frame.",4,null],[11,"new","","Creates a new rendering engine.",5,{"inputs":[{"name":"pipeline"}],"output":{"name":"renderer"}}],[11,"new_deferred","","Creates a new rendering engine with a deferred pipeline.",5,{"inputs":[],"output":{"name":"renderer"}}],[11,"new_forward","","Creates a new rendering engine with a forward pipeline.",5,{"inputs":[],"output":{"name":"renderer"}}],[11,"draw","","Draws a frame with the currently set render pipeline.",5,null],[11,"fmt","","",2,null],[11,"fmt","","",1,null],[11,"new","","Defines a new pipeline stage and assigns it a descriptive name.",1,{"inputs":[{"name":"str"}],"output":{"name":"stage"}}],[11,"fmt","","",0,null],[11,"new","","Creates an empty pipeline and assigns it a descriptive name.",0,{"inputs":[{"name":"str"}],"output":{"name":"pipeline"}}],[11,"build","","",0,{"inputs":[{"name":"str"}],"output":{"name":"pipelinebuilder"}}],[11,"new","","",6,{"inputs":[{"name":"str"}],"output":{"name":"pipelinebuilder"}}],[11,"new_stage","","",6,null],[11,"done","","",6,null]],"paths":[[3,"Pipeline"],[3,"Stage"],[4,"Step"],[3,"Frame"],[3,"FrameBuilder"],[3,"Renderer"],[3,"PipelineBuilder"]]};
searchIndex["amethyst_engine"] = {"doc":"Game engine sitting atop the core libraries.","items":[[3,"Duration","amethyst_engine","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Application","","User-friendly facade for building games. Manages main loop.",null,null],[3,"StateMachine","","A simple stack-based state machine (pushdown automaton).",null,null],[3,"Stopwatch","","Useful utility for accurately measuring elapsed time.",null,null],[4,"Trans","","Types of state transitions.",null,null],[13,"None","","Continue as normal.",0,null],[13,"Pop","","Remove the active state and resume the next state on the stack or stop if there are none.",0,null],[13,"Push","","Pause the active state and push a new state onto the stack.",0,null],[13,"Switch","","Remove the current state on the stack and insert a different one.",0,null],[13,"Quit","","Stop and remove all states and shut down the engine.",0,null],[11,"new","","Creates a new Application with the given initial game state.",1,{"inputs":[{"name":"t"}],"output":{"name":"application"}}],[11,"run","","Starts the application and manages the game loop.",1,null],[11,"new","","",2,{"inputs":[{"name":"t"}],"output":{"name":"statemachine"}}],[11,"is_running","","Checks whether the state machine is running.",2,null],[11,"start","","Initializes the state machine.\n# Panics\nPanics if no states are present in the stack.",2,null],[11,"handle_events","","Passes a vector of events to the active state to handle.",2,null],[11,"fixed_update","","Updates the currently active state at a steady, fixed interval.",2,null],[11,"update","","Updates the currently active state immediately.",2,null],[11,"new","","",3,{"inputs":[],"output":{"name":"stopwatch"}}],[11,"elapsed","","Retrieves the elapsed time.",3,null],[11,"restart","","Stops, resets, and starts the stopwatch again.",3,null],[11,"start","","Starts, or resumes, measuring elapsed time. If the stopwatch has been\nstarted and stopped before, the new results are compounded onto the\nexisting elapsed time value.",3,null],[11,"stop","","Stops measuring elapsed time.",3,null],[11,"reset","","Clears the current elapsed time value.",3,null],[8,"State","","A trait which defines game states that can be used by the state machine.",null,null],[11,"on_start","","Executed when the game state begins.",4,null],[11,"on_stop","","Executed when the game state exits.",4,null],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",4,null],[11,"on_resume","","Executed when the application returns to this game state once again.",4,null],[11,"handle_events","","Executed on every frame before updating, for use in reacting to events.",4,null],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second\nby default).",4,null],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",5,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",5,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",5,null],[11,"num_days","","Returns the total number of whole days in the duration.",5,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",5,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",5,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",5,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",5,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",5,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",5,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",5,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",5,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",5,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",5,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",5,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",5,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",5,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",5,null],[11,"fmt","","",5,null],[11,"cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"neg","","",5,null],[11,"add","","",5,null],[11,"sub","","",5,null],[11,"mul","","",5,null],[11,"div","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"clone","","",6,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"add","","",6,null],[11,"on_start","","Executed when the game state begins.",4,null],[11,"on_stop","","Executed when the game state exits.",4,null],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",4,null],[11,"on_resume","","Executed when the application returns to this game state once again.",4,null],[11,"handle_events","","Executed on every frame before updating, for use in reacting to events.",4,null],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second\nby default).",4,null],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",4,null]],"paths":[[4,"Trans"],[3,"Application"],[3,"StateMachine"],[3,"Stopwatch"],[8,"State"],[3,"Duration"],[3,"SteadyTime"]]};
searchIndex["amethyst_ecs"] = {"doc":"","items":[[3,"Simulation","amethyst_ecs","",null,null],[3,"SimBuilder","","Consuming builder for easily constructing a new simulations.",null,null],[3,"World","","A collection of entities and their respective components.",null,null],[11,"new","","Creates an empty simulation.",0,{"inputs":[],"output":{"name":"simulation"}}],[11,"build","","Creates an initialized simulation using the [builder pattern][bp].",0,{"inputs":[],"output":{"name":"simbuilder"}}],[11,"add_processor","","Adds a new processor to the simulation.",0,null],[11,"step","","Computes the next state of the world using the given processors.",0,null],[11,"new","","Starts building a new simulation.",1,{"inputs":[],"output":{"name":"simbuilder"}}],[11,"with","","Add a given processor to the simulation.",1,null],[11,"done","","Returns the newly-built simulation or a list of any errors the\nprocessors may have encountered.",1,null],[11,"fmt","","",2,null],[11,"new","","Creates a new empty world.",2,{"inputs":[],"output":{"name":"world"}}],[11,"create_entity","","Creates a new entity in the world and returns a handle to it.",2,null],[11,"destroy_entity","","Destroys a given entity and removes its components.",2,null],[11,"insert_component","","Attaches a component to an entity and returns the component&#39;s index.",2,null],[11,"remove_component","","",2,null],[11,"remove_component_type","","",2,null],[11,"component","","Returns ith component of selected type",2,null],[11,"component_mut","","Returns ith mutable component of selected type",2,null],[6,"Entity","","An unsigned 64-bit handle to an entity.",null,null],[6,"ProcessorResult","","The error type reported by SimBuilder if they fail to initialize.\nTODO: original note specified it was en error type reported by a **processor**,\nalthough, as seen below, Processor doesn&#39;t have any function to return an error,\nthus, only SimBuilder can return Result as of now.",null,null],[8,"Processor","","The trait implemented by all processors.",null,null],[10,"process","","TODO: Need to finalize API design here, according to [issue #10].",3,null]],"paths":[[3,"Simulation"],[3,"SimBuilder"],[3,"World"],[8,"Processor"]]};
initSearch(searchIndex);
